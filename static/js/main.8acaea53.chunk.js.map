{"version":3,"sources":["cmps/question.js","cmps/stats.js","data/fail/1.mp3","data/fail/2.mp3","data/fail/3.mp3","data/fail/4.mp3","data/nice/1.mp3","data/nice/2.mp3","data/nice/3.mp3","data/best.mp3","cmps/toolbar.js","cmps/quiz.js","App.js","index.js"],"names":["Question","data","useState","isEnd","setEnd","isCorrect","setCorrect","chosenIdx","setChosenIdx","correct","wrong","questLeft","stats","setStats","isLock","setLock","soundFail1","Audio","fail1","soundFail2","fail2","soundFail3","fail3","soundFail4","fail4","soundWin1","win1","soundWin2","win2","soundWin3","win3","playSounds","type","num","Math","floor","random","eval","onAnswer","idx","console","log","answer","quiz","options","slice","correctAnswer","answers","getRightAnswerIdx","newStats","correctIdx","forEach","opt","getBoxClass","res","goNext","cancelRobot","onGoNext","className","question","onClick","talkBitch","map","key","Stats","module","exports","Toolbar","Quiz","currentQuestionIdx","setCurrentQuestionIdx","dataJSON","setQuiz","setNum","length","left","setLeft","bestAudio","best","useSpeechSynthesis","speak","cancel","speaking","supported","voices","a","text","getCurrQuest","getQuiz","number","questions","arr","n","result","Array","len","taken","x","getRandom","window","location","href","play","class","placeholder","value","max","onChange","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8acaea53.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// import Speech from 'react-speech';\r\n\r\nimport Stats from \"./stats\"\r\nimport { FaArrowAltCircleRight } from 'react-icons/fa';\r\nimport fail1 from \"../data/fail/1.mp3\"\r\nimport fail2 from \"../data/fail/2.mp3\"\r\nimport fail3 from \"../data/fail/3.mp3\"\r\nimport fail4 from \"../data/fail/4.mp3\"\r\nimport win1 from \"../data/nice/1.mp3\"\r\nimport win2 from \"../data/nice/2.mp3\"\r\nimport win3 from \"../data/nice/3.mp3\"\r\n\r\nexport default function Question({ ...data }) {\r\n    const [isEnd, setEnd] = useState(false);\r\n    const [isCorrect, setCorrect] = useState(false);\r\n    const [chosenIdx, setChosenIdx] = useState(false);\r\n    const [stats, setStats] = useState({ correct: 0, wrong: 0, questLeft: data.questLeft });\r\n    const [isLock, setLock] = useState(false);\r\n    const soundFail1 = new Audio(fail1);\r\n    const soundFail2 = new Audio(fail2);\r\n    const soundFail3 = new Audio(fail3);\r\n    const soundFail4 = new Audio(fail4);\r\n    const soundWin1 = new Audio(win1);\r\n    const soundWin2 = new Audio(win2);\r\n    const soundWin3 = new Audio(win3);\r\n\r\n\r\n\r\n    function playSounds(type) {\r\n\r\n        let num = Math.floor(Math.random() * 4)\r\n        if (type === \"win\") {\r\n            if (num > 4) num -= 1\r\n            if (num === 0) num += 1\r\n            eval(`soundWin${num}.play()`)\r\n\r\n        } else {\r\n            if (num > 3) num -= 1\r\n            if (num === 0) num += 1\r\n            eval(`soundFail${num + 1}.play()`)\r\n\r\n\r\n        }\r\n    }\r\n\r\n    function onAnswer(idx) {\r\n        if (isLock) return\r\n        console.log('answerd: ', idx)\r\n        const answer = data.data.quiz.options[idx].slice(0, 1)\r\n        const correctAnswer = data.data.quiz.answers.slice(8, 9)\r\n        setCorrect(getRightAnswerIdx(correctAnswer))\r\n        let newStats = { ...stats }\r\n        if (answer === correctAnswer) {\r\n            playSounds(\"win\")\r\n            setChosenIdx(idx)\r\n            newStats.correct += 1\r\n        } else {\r\n            playSounds(\"lose\")\r\n            setChosenIdx(idx)\r\n            newStats.wrong += 1\r\n        }\r\n        setStats(newStats)\r\n        setEnd(1)\r\n        setLock(true)\r\n        console.log('STATS: ', stats)\r\n    }\r\n\r\n    function getRightAnswerIdx(correctAnswer) {\r\n        let correctIdx = false\r\n        data.data.quiz.options.forEach((opt, idx) => {\r\n            if (opt.slice(0, 1) === correctAnswer) {\r\n                correctIdx = idx\r\n            }\r\n        })\r\n        return correctIdx\r\n    }\r\n    function getBoxClass(idx) {\r\n        if (!isEnd) return\r\n        let res\r\n        if (isCorrect === idx) {\r\n            res = 'answer-box-correct jello-horizontal'\r\n        } else if (idx === chosenIdx) {\r\n            res = 'answer-box-wrong vibrate-1 '\r\n        }\r\n        if (chosenIdx === idx) {\r\n            res += \" highlight-chosen\"\r\n        }\r\n        return res\r\n    }\r\n    function goNext() {\r\n        data.cancelRobot()\r\n        data.onGoNext()\r\n        setEnd(false);\r\n        setCorrect(false);\r\n        setChosenIdx(false);\r\n        setLock(false)\r\n        const newStats = { ...stats }\r\n        newStats.questLeft = data.questLeft\r\n        setStats(newStats)\r\n\r\n    }\r\n    return (<>\r\n        <Stats stats={stats}></Stats>\r\n        <div className='questions'>\r\n            {/* <Speech text={data.data.quiz.question} voice=\"Daniel\" /> */}\r\n\r\n            <h1 className=\"question-title\">{data.data.quiz.question}</h1>\r\n            <div className=\"answer-container\">\r\n                <div className=\"talker-container\">\r\n\r\n                    <button\r\n                        type=\"button\"\r\n\r\n                        onClick={() => data.talkBitch()}\r\n                        className=\"talk-btn\"\r\n                    >\r\n                        Talk\r\n              </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"stfu-btn\"\r\n                        onClick={() => data.cancelRobot()}\r\n                    >\r\n                        Stfu\r\n              </button>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"answer-box-grid\">\r\n                    {data.data.quiz.options.map((opt, idx) => {\r\n                        return (<div key={opt + idx} onClick={() => onAnswer(idx)} className={`answer-box ${getBoxClass(idx)}`}><p>{opt}</p></div>)\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"next-question-btn\" onClick={goNext}><FaArrowAltCircleRight></FaArrowAltCircleRight></div></>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Stats({ stats }) {\r\n\r\n    return (\r\n        <div className='stats-container'>\r\n            <h1 className=\"stats-correct\">Correct: {stats.correct}</h1>\r\n            <h1 className=\"stats-wrong\">Wrong: {stats.wrong}</h1>\r\n            <h1 className=\"stats-wrong\">Left: {stats.questLeft}</h1>\r\n        </div>\r\n    );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/1.cfbf91c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.f74f2c7a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.eeb418db.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.d3dddd41.mp3\";","module.exports = __webpack_public_path__ + \"static/media/1.e6775649.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.02a60b6c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.b02b3b13.mp3\";","module.exports = __webpack_public_path__ + \"static/media/best.d3d6a781.mp3\";","import React, { useState } from 'react';\r\n\r\nexport default function Toolbar() {\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <h1>Welcome To Abir Nadav CEH Training App</h1>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Questions from \"./question\"\r\nimport dataJSON from \"../data/questions.json\"\r\nimport best from \"../data/best.mp3\"\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\n\r\nexport default function Quiz() {\r\n    const [currentQuestionIdx, setCurrentQuestionIdx] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const [data, setData] = useState(dataJSON);\r\n    const [quiz, setQuiz] = useState(0);\r\n    const [num, setNum] = useState(25);\r\n    const [left, setLeft] = useState(quiz.length)\r\n    const bestAudio = new Audio(best)\r\n    const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\r\n    });\r\n\r\n    async function talkBitch() {\r\n        console.log('TALKING!', currentQuestionIdx)\r\n        let idx = 0\r\n        if (currentQuestionIdx === 1) {\r\n            idx += 1\r\n        }\r\n        speak({ text: getCurrQuest(currentQuestionIdx + idx).question })\r\n    }\r\n\r\n    // const handleAnswerOptionClick = (isCorrect) => {\r\n    // \tif (isCorrect) {\r\n    // \t\tsetScore(score + 1);\r\n    // \t}\r\n\r\n    // \tconst nextQuestion = currentQuestion + 1;\r\n    // \tif (nextQuestion < questions.length) {\r\n    // \t\tsetCurrentQuestion(nextQuestion);\r\n    // \t} else {\r\n    // \t\tsetShowScore(true);\r\n    // \t}\r\n    // };\r\n    // console.log(\"Data\", data)\r\n    function getRandom(arr, n) {\r\n        var result = new Array(n),\r\n            len = arr.length,\r\n            taken = new Array(len);\r\n        if (n > len)\r\n            console.log(\"getRandom: more elements taken than available\");\r\n        while (n--) {\r\n            var x = Math.floor(Math.random() * len);\r\n            result[n] = arr[x in taken ? taken[x] : x];\r\n            taken[x] = --len in taken ? taken[len] : len;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getQuiz(number) {\r\n        const questions = getRandom(data.data, number)\r\n        console.log(\"🚀 ~ file: quiz.js ~ line 42 ~ getQuiz ~ questions\", questions)\r\n        setQuiz(questions)\r\n        setLeft(questions.length)\r\n    }\r\n\r\n\r\n\r\n    function getCurrQuest(idx) {\r\n\r\n        console.log(\"QUIZZZ\", quiz[idx])\r\n        return quiz[idx]\r\n    }\r\n    function playBest() {\r\n        console.log('PLAYING!')\r\n        bestAudio.play()\r\n    }\r\n\r\n    function goNext() {\r\n        if (currentQuestionIdx === quiz.length - 1) return\r\n        setCurrentQuestionIdx(currentQuestionIdx + 1)\r\n        console.log(\"quiz.length\", quiz.length, \"currentQuestionIdx\", currentQuestionIdx)\r\n        const res = quiz.length - 1 - currentQuestionIdx\r\n        setLeft(res)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (currentQuestionIdx === quiz.length - 1 ? (\r\n        <div className=\"done-container\">\r\n            <h1>Good Job! Try Again!</h1>\r\n            <button onClick={() => { window.location.href = window.location.href }}>Restart!</button>\r\n            { playBest()}\r\n            <div className=\"fireworks-container\">\r\n\r\n                <div class=\"pyro\">\r\n                    <div class=\"before\"></div>\r\n                    <div class=\"after\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    ) :\r\n        <div className='questions'>\r\n            <div className=\"start-quiz-container\">\r\n                <h1>CEH training Quiz!<br></br><br></br>Choose Questions Amount!</h1>\r\n                <input\r\n                    className=\"quiz-input\"\r\n                    type=\"number\"\r\n                    placeholder=\"Set Quiz Number\"\r\n                    value={num}\r\n                    max=\"350\"\r\n                    onChange={e => setNum(e.target.value)}></input>\r\n                <button onClick={() => getQuiz(num)}>Start!</button>\r\n            </div>\r\n\r\n\r\n            {\r\n                quiz.length > 0 && <Questions data={{ quiz: getCurrQuest(currentQuestionIdx) }} onGoNext={goNext} questLeft={left} talkBitch={talkBitch} cancelRobot={cancel}></Questions>\r\n            }\r\n        </div >\r\n\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport Toolbar from \"./cmps/toolbar\"\n\nimport Quiz from './cmps/quiz';\nexport default function App() {\n\n\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Toolbar></Toolbar>\n\t\t\t<Quiz></Quiz>\n\n\t\t</div >\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}