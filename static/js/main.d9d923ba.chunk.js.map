{"version":3,"sources":["cmps/toolbar.js","cmps/stats.js","cmps/question.js","cmps/quiz.js","App.js","index.js"],"names":["Toolbar","className","Stats","stats","correct","wrong","Question","data","useState","isEnd","setEnd","isCorrect","setCorrect","chosenIdx","setChosenIdx","time","setStats","onAnswer","idx","console","log","answer","quiz","options","slice","correctAnswer","answers","correctIdx","forEach","opt","getRightAnswerIdx","newStats","getBoxClass","question","map","key","onClick","onGoNext","Quiz","currentQuestionIdx","setCurrentQuestionIdx","dataJSON","setQuiz","num","setNum","getQuiz","number","questions","arr","n","result","Array","len","length","taken","x","Math","floor","random","getRandom","type","placeholder","value","max","onChange","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAEe,SAASA,IAEpB,OACI,yBAAKC,UAAU,WACX,uE,wBCJG,SAASC,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAE5B,OACI,yBAAKF,UAAU,mBACX,wBAAIA,UAAU,iBAAd,YAAwCE,EAAMC,SAC9C,wBAAIH,UAAU,eAAd,UAAoCE,EAAME,QCHvC,SAASC,EAAT,GAAgC,IAATC,EAAQ,sBAClBC,oBAAS,GADS,mBACnCC,EADmC,KAC5BC,EAD4B,OAEVF,oBAAS,GAFC,mBAEnCG,EAFmC,KAExBC,EAFwB,OAGRJ,oBAAS,GAHD,mBAGnCK,EAHmC,KAGxBC,EAHwB,OAIhBN,mBAAS,CAAEJ,QAAS,EAAGC,MAAO,EAAGU,KAAM,IAJvB,mBAInCZ,EAJmC,KAI5Ba,EAJ4B,KA0B1C,SAASC,EAASC,GACdC,QAAQC,IAAI,YAAaF,GACzB,IAAMG,EAASd,EAAKA,KAAKe,KAAKC,QAAQL,GAAKM,MAAM,EAAG,GAC9CC,EAAgBlB,EAAKA,KAAKe,KAAKI,QAAQF,MAAM,EAAG,GACtDZ,EAcJ,SAA2Ba,GACvB,IAAIE,GAAa,EAMjB,OALApB,EAAKA,KAAKe,KAAKC,QAAQK,SAAQ,SAACC,EAAKX,GAC7BW,EAAIL,MAAM,EAAG,KAAOC,IACpBE,EAAaT,MAGdS,EArBIG,CAAkBL,IAC7B,IAAIM,EAAQ,eAAQ5B,GAChBkB,IAAWI,GACXX,EAAaI,GACba,EAAS3B,SAAW,IAEpBU,EAAaI,GACba,EAAS1B,OAAS,GAEtBW,EAASe,GACTrB,EAAO,GACPS,QAAQC,IAAI,UAAWjB,GAY3B,SAAS6B,EAAYd,GACjB,GAAKT,EACL,OAAIE,IAAcO,EACP,qBACAA,IAAQL,EACR,wBADJ,EAWX,OAAQ,oCACJ,kBAACX,EAAD,CAAOC,MAAOA,IACd,yBAAKF,UAAU,aAGX,wBAAIA,UAAU,kBAAkBM,EAAKA,KAAKe,KAAKW,UAC/C,yBAAKhC,UAAU,oBAUX,yBAAKA,UAAU,mBACVM,EAAKA,KAAKe,KAAKC,QAAQW,KAAI,SAACL,EAAKX,GAC9B,OAAQ,yBAAKiB,IAAKN,EAAMX,EAAKkB,QAAS,kBAAMnB,EAASC,IAAMjB,UAAS,qBAAgB+B,EAAYd,KAAQ,2BAAIW,UAQ5H,yBAAK5B,UAAU,oBAAoBmC,QAjCvC,WACI7B,EAAK8B,WACL3B,GAAO,GACPE,GAAW,GACXE,GAAa,KA6Bb,Y,WC/FO,SAASwB,IAAQ,IA4CNpB,EA5CK,EAEyBV,mBAAS,GAFlC,mBAEpB+B,EAFoB,KAEAC,EAFA,OAGOhC,oBAAS,GAHhB,gCAIDA,mBAAS,IAJR,gCAKHA,mBAASiC,IALN,mBAKpBlC,EALoB,aAMHC,mBAAS,IANN,mBAMpBc,EANoB,KAMdoB,EANc,OAOLlC,mBAAS,GAPJ,mBAOpBmC,EAPoB,KAOfC,EAPe,KAoC3B,SAASC,EAAQC,GACb,IAAMC,EAfV,SAAmBC,EAAKC,GACpB,IAAIC,EAAS,IAAIC,MAAMF,GACnBG,EAAMJ,EAAIK,OACVC,EAAQ,IAAIH,MAAMC,GAGtB,IAFIH,EAAIG,GACJjC,QAAQC,IAAI,iDACT6B,KAAK,CACR,IAAIM,EAAIC,KAAKC,MAAMD,KAAKE,SAAWN,GACnCF,EAAOD,GAAKD,EAAIO,KAAKD,EAAQA,EAAMC,GAAKA,GACxCD,EAAMC,KAAOH,KAAOE,EAAQA,EAAMF,GAAOA,EAE7C,OAAOF,EAIWS,CAAUpD,EAAKA,KAAMuC,GACvC3B,QAAQC,IAAI,+DAAsD2B,GAClEL,EAAQK,GAgBZ,OACI,yBAAK9C,UAAU,aACX,yBAAKA,UAAU,wBACX,kDACA,2BACIA,UAAU,aACV2D,KAAK,SACLC,YAAY,kBACZC,MAAOnB,EACPoB,IAAI,MACJC,SAAU,SAAAC,GAAC,OAAIrB,EAAOqB,EAAEC,OAAOJ,UACnC,4BAAQ1B,QAAS,kBAAMS,EAAQF,KAA/B,WAKArB,EAAK+B,OAAS,GAAK,kBAAC/C,EAAD,CAAWC,KAAM,CAAEe,MA3B5BJ,EA2B+CqB,EAzBjEpB,QAAQC,IAAI,SAAUE,EAAKJ,IACpBI,EAAKJ,KAwB4EmB,SArB5F,WACQE,IAAuBjB,EAAK+B,OAAS,GACzCb,EAAsBD,EAAqB,OCnDpC,SAAS4B,IAIvB,OACC,yBAAKlE,UAAU,OACd,kBAACD,EAAD,MACA,kBAACsC,EAAD,OCNH8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACH,EAAD,OAEFI,SAASC,eAAe,U","file":"static/js/main.d9d923ba.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Toolbar() {\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <h1>Welcome To Abir Nadav CEH Training App</h1>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Stats({ stats }) {\r\n\r\n    return (\r\n        <div className='stats-container'>\r\n            <h1 className=\"stats-correct\">Correct: {stats.correct}</h1>\r\n            <h1 className=\"stats-wrong\">Wrong: {stats.wrong}</h1>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// import Speech from 'react-speech';\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\nimport Stats from \"./stats\"\r\nexport default function Question({ ...data }) {\r\n    const [isEnd, setEnd] = useState(false);\r\n    const [isCorrect, setCorrect] = useState(false);\r\n    const [chosenIdx, setChosenIdx] = useState(false);\r\n    const [stats, setStats] = useState({ correct: 0, wrong: 0, time: 0 });\r\n    // const onEnd = () => {\r\n    //     console.log(' TALKER OVER!')\r\n    //     cancel()\r\n\r\n    // };\r\n    // const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\r\n    //     onEnd,\r\n    // });\r\n\r\n\r\n    // async function talkBitch() {\r\n    //     console.log('TALKING!')\r\n    //     speak({ text: data.data.quiz.question })\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function onAnswer(idx) {\r\n        console.log('answerd: ', idx)\r\n        const answer = data.data.quiz.options[idx].slice(0, 1)\r\n        const correctAnswer = data.data.quiz.answers.slice(8, 9)\r\n        setCorrect(getRightAnswerIdx(correctAnswer))\r\n        let newStats = { ...stats }\r\n        if (answer === correctAnswer) {\r\n            setChosenIdx(idx)\r\n            newStats.correct += 1\r\n        } else {\r\n            setChosenIdx(idx)\r\n            newStats.wrong += 1\r\n        }\r\n        setStats(newStats)\r\n        setEnd(1)\r\n        console.log('STATS: ', stats)\r\n    }\r\n\r\n    function getRightAnswerIdx(correctAnswer) {\r\n        let correctIdx = false\r\n        data.data.quiz.options.forEach((opt, idx) => {\r\n            if (opt.slice(0, 1) === correctAnswer) {\r\n                correctIdx = idx\r\n            }\r\n        })\r\n        return correctIdx\r\n    }\r\n    function getBoxClass(idx) {\r\n        if (!isEnd) return\r\n        if (isCorrect === idx) {\r\n            return 'answer-box-correct'\r\n        } else if (idx === chosenIdx) {\r\n            return 'answer-box-wrong'\r\n        }\r\n    }\r\n    function goNext() {\r\n        data.onGoNext()\r\n        setEnd(false);\r\n        setCorrect(false);\r\n        setChosenIdx(false);\r\n        // talkBitch()\r\n    }\r\n    return (<>\r\n        <Stats stats={stats}></Stats>\r\n        <div className='questions'>\r\n            {/* <Speech text={data.data.quiz.question} voice=\"Daniel\" /> */}\r\n\r\n            <h1 className=\"question-title\">{data.data.quiz.question}</h1>\r\n            <div className=\"answer-container\">\r\n                {/* <button\r\n                    type=\"button\"\r\n                    onClick={() => talkBitch()}\r\n                >\r\n                    Stupid Robot\r\n              </button> */}\r\n\r\n\r\n\r\n                <div className=\"answer-box-grid\">\r\n                    {data.data.quiz.options.map((opt, idx) => {\r\n                        return (<div key={opt + idx} onClick={() => onAnswer(idx)} className={`answer-box ${getBoxClass(idx)}`}><p>{opt}</p></div>)\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"next-question-btn\" onClick={goNext}>Next --</div></>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Questions from \"./question\"\r\nimport dataJSON from \"../data/questions.json\"\r\nexport default function Quiz() {\r\n\r\n    const [currentQuestionIdx, setCurrentQuestionIdx] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const [data, setData] = useState(dataJSON);\r\n    const [quiz, setQuiz] = useState(0);\r\n    const [num, setNum] = useState(0);\r\n\r\n    // const handleAnswerOptionClick = (isCorrect) => {\r\n    // \tif (isCorrect) {\r\n    // \t\tsetScore(score + 1);\r\n    // \t}\r\n\r\n    // \tconst nextQuestion = currentQuestion + 1;\r\n    // \tif (nextQuestion < questions.length) {\r\n    // \t\tsetCurrentQuestion(nextQuestion);\r\n    // \t} else {\r\n    // \t\tsetShowScore(true);\r\n    // \t}\r\n    // };\r\n    // console.log(\"Data\", data)\r\n    function getRandom(arr, n) {\r\n        var result = new Array(n),\r\n            len = arr.length,\r\n            taken = new Array(len);\r\n        if (n > len)\r\n            console.log(\"getRandom: more elements taken than available\");\r\n        while (n--) {\r\n            var x = Math.floor(Math.random() * len);\r\n            result[n] = arr[x in taken ? taken[x] : x];\r\n            taken[x] = --len in taken ? taken[len] : len;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getQuiz(number) {\r\n        const questions = getRandom(data.data, number)\r\n        console.log(\"ðŸš€ ~ file: quiz.js ~ line 42 ~ getQuiz ~ questions\", questions)\r\n        setQuiz(questions)\r\n    }\r\n\r\n\r\n\r\n    function getCurrQuest(idx) {\r\n\r\n        console.log(\"QUIZZZ\", quiz[idx])\r\n        return quiz[idx]\r\n    }\r\n\r\n    function goNext() {\r\n        if (currentQuestionIdx === quiz.length - 1) return\r\n        setCurrentQuestionIdx(currentQuestionIdx + 1)\r\n    }\r\n\r\n    return (\r\n        <div className='questions'>\r\n            <div className=\"start-quiz-container\">\r\n                <h1>CEH training Quiz!</h1>\r\n                <input\r\n                    className=\"quiz-input\"\r\n                    type=\"number\"\r\n                    placeholder=\"Set Quiz Number\"\r\n                    value={num}\r\n                    max=\"350\"\r\n                    onChange={e => setNum(e.target.value)}></input>\r\n                <button onClick={() => getQuiz(num)}>Start!</button>\r\n            </div>\r\n\r\n\r\n            {\r\n                quiz.length > 0 && <Questions data={{ quiz: getCurrQuest(currentQuestionIdx) }} onGoNext={goNext} ></Questions>\r\n            }\r\n        </div >\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport Toolbar from \"./cmps/toolbar\"\n\nimport Quiz from './cmps/quiz';\nexport default function App() {\n\n\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Toolbar></Toolbar>\n\t\t\t<Quiz></Quiz>\n\n\t\t</div >\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}