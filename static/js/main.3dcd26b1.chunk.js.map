{"version":3,"sources":["cmps/toolbar.js","cmps/stats.js","cmps/question.js","cmps/quiz.js","App.js","index.js","data/best.mp3"],"names":["Toolbar","className","Stats","stats","correct","wrong","questLeft","Question","data","useState","isEnd","setEnd","isCorrect","setCorrect","chosenIdx","setChosenIdx","setStats","isLock","setLock","onAnswer","idx","console","log","answer","quiz","options","slice","correctAnswer","answers","correctIdx","forEach","opt","getRightAnswerIdx","newStats","getBoxClass","question","map","key","onClick","onGoNext","Quiz","currentQuestionIdx","setCurrentQuestionIdx","dataJSON","setQuiz","num","setNum","length","left","setLeft","bestAudio","Audio","best","getQuiz","number","questions","arr","n","result","Array","len","taken","x","Math","floor","random","getRandom","window","location","href","play","class","type","placeholder","value","max","onChange","e","target","res","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3dcd26b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function Toolbar() {\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <h1>Welcome To Abir Nadav CEH Training App</h1>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Stats({ stats }) {\r\n\r\n    return (\r\n        <div className='stats-container'>\r\n            <h1 className=\"stats-correct\">Correct: {stats.correct}</h1>\r\n            <h1 className=\"stats-wrong\">Wrong: {stats.wrong}</h1>\r\n            <h1 className=\"stats-wrong\">Left: {stats.questLeft}</h1>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// import Speech from 'react-speech';\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\nimport Stats from \"./stats\"\r\nimport { FaArrowAltCircleRight } from 'react-icons/fa';\r\n\r\n\r\nexport default function Question({ ...data }) {\r\n    const [isEnd, setEnd] = useState(false);\r\n    const [isCorrect, setCorrect] = useState(false);\r\n    const [chosenIdx, setChosenIdx] = useState(false);\r\n    const [stats, setStats] = useState({ correct: 0, wrong: 0, questLeft: data.questLeft });\r\n    const [isLock, setLock] = useState(false);\r\n    // const onEnd = () => {\r\n    //     console.log(' TALKER OVER!')\r\n    //     cancel()\r\n\r\n    // };\r\n    // const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\r\n    //     onEnd,\r\n    // });\r\n\r\n\r\n    // async function talkBitch() {\r\n    //     console.log('TALKING!')\r\n    //     speak({ text: data.data.quiz.question })\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function onAnswer(idx) {\r\n        if (isLock) return\r\n        console.log('answerd: ', idx)\r\n        const answer = data.data.quiz.options[idx].slice(0, 1)\r\n        const correctAnswer = data.data.quiz.answers.slice(8, 9)\r\n        setCorrect(getRightAnswerIdx(correctAnswer))\r\n        let newStats = { ...stats }\r\n        if (answer === correctAnswer) {\r\n            setChosenIdx(idx)\r\n            newStats.correct += 1\r\n        } else {\r\n            setChosenIdx(idx)\r\n            newStats.wrong += 1\r\n        }\r\n        setStats(newStats)\r\n        setEnd(1)\r\n        setLock(true)\r\n        console.log('STATS: ', stats)\r\n    }\r\n\r\n    function getRightAnswerIdx(correctAnswer) {\r\n        let correctIdx = false\r\n        data.data.quiz.options.forEach((opt, idx) => {\r\n            if (opt.slice(0, 1) === correctAnswer) {\r\n                correctIdx = idx\r\n            }\r\n        })\r\n        return correctIdx\r\n    }\r\n    function getBoxClass(idx) {\r\n        if (!isEnd) return\r\n        if (isCorrect === idx) {\r\n            return 'answer-box-correct'\r\n        } else if (idx === chosenIdx) {\r\n            return 'answer-box-wrong'\r\n        }\r\n    }\r\n    function goNext() {\r\n        data.onGoNext()\r\n        setEnd(false);\r\n        setCorrect(false);\r\n        setChosenIdx(false);\r\n        setLock(false)\r\n        const newStats = { ...stats }\r\n        newStats.questLeft = data.questLeft\r\n        setStats(newStats)\r\n        // talkBitch()\r\n    }\r\n    return (<>\r\n        <Stats stats={stats}></Stats>\r\n        <div className='questions'>\r\n            {/* <Speech text={data.data.quiz.question} voice=\"Daniel\" /> */}\r\n\r\n            <h1 className=\"question-title\">{data.data.quiz.question}</h1>\r\n            <div className=\"answer-container\">\r\n                {/* <button\r\n                    type=\"button\"\r\n                    onClick={() => talkBitch()}\r\n                >\r\n                    Stupid Robot\r\n              </button> */}\r\n\r\n\r\n\r\n                <div className=\"answer-box-grid\">\r\n                    {data.data.quiz.options.map((opt, idx) => {\r\n                        return (<div key={opt + idx} onClick={() => onAnswer(idx)} className={`answer-box ${getBoxClass(idx)}`}><p>{opt}</p></div>)\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"next-question-btn\" onClick={goNext}><FaArrowAltCircleRight></FaArrowAltCircleRight></div></>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Questions from \"./question\"\r\nimport dataJSON from \"../data/questions.json\"\r\nimport best from \"../data/best.mp3\"\r\nexport default function Quiz() {\r\n\r\n    const [currentQuestionIdx, setCurrentQuestionIdx] = useState(0);\r\n    const [showScore, setShowScore] = useState(false);\r\n    const [score, setScore] = useState(0);\r\n    const [data, setData] = useState(dataJSON);\r\n    const [quiz, setQuiz] = useState(0);\r\n    const [num, setNum] = useState(50);\r\n    const [left, setLeft] = useState(quiz.length)\r\n    const bestAudio = new Audio(best)\r\n\r\n\r\n\r\n    // const handleAnswerOptionClick = (isCorrect) => {\r\n    // \tif (isCorrect) {\r\n    // \t\tsetScore(score + 1);\r\n    // \t}\r\n\r\n    // \tconst nextQuestion = currentQuestion + 1;\r\n    // \tif (nextQuestion < questions.length) {\r\n    // \t\tsetCurrentQuestion(nextQuestion);\r\n    // \t} else {\r\n    // \t\tsetShowScore(true);\r\n    // \t}\r\n    // };\r\n    // console.log(\"Data\", data)\r\n    function getRandom(arr, n) {\r\n        var result = new Array(n),\r\n            len = arr.length,\r\n            taken = new Array(len);\r\n        if (n > len)\r\n            console.log(\"getRandom: more elements taken than available\");\r\n        while (n--) {\r\n            var x = Math.floor(Math.random() * len);\r\n            result[n] = arr[x in taken ? taken[x] : x];\r\n            taken[x] = --len in taken ? taken[len] : len;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function getQuiz(number) {\r\n        const questions = getRandom(data.data, number)\r\n        console.log(\"🚀 ~ file: quiz.js ~ line 42 ~ getQuiz ~ questions\", questions)\r\n        setQuiz(questions)\r\n        setLeft(questions.length)\r\n    }\r\n\r\n\r\n\r\n    function getCurrQuest(idx) {\r\n\r\n        console.log(\"QUIZZZ\", quiz[idx])\r\n        return quiz[idx]\r\n    }\r\n    function playBest() {\r\n        console.log('PLAYING!')\r\n        bestAudio.play()\r\n    }\r\n\r\n    function goNext() {\r\n        if (currentQuestionIdx === quiz.length - 1) return\r\n        setCurrentQuestionIdx(currentQuestionIdx + 1)\r\n        const res = quiz.length - 1 - currentQuestionIdx\r\n        setLeft(res)\r\n        console.log(\"quiz.length\", quiz.length, \"currentQuestionIdx\", currentQuestionIdx)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (currentQuestionIdx === quiz.length - 1 ? (\r\n        <div className=\"done-container\">\r\n            <h1>Good Job! Try Again!</h1>\r\n            <button onClick={() => { window.location.href = window.location.href }}>Restart!</button>\r\n            { playBest()}\r\n            <div className=\"fireworks-container\">\r\n\r\n                <div class=\"pyro\">\r\n                    <div class=\"before\"></div>\r\n                    <div class=\"after\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    ) :\r\n        <div className='questions'>\r\n            <div className=\"start-quiz-container\">\r\n                <h1>CEH training Quiz!<br></br><br></br>Choose Questions Amount!</h1>\r\n                <input\r\n                    className=\"quiz-input\"\r\n                    type=\"number\"\r\n                    placeholder=\"Set Quiz Number\"\r\n                    value={num}\r\n                    max=\"350\"\r\n                    onChange={e => setNum(e.target.value)}></input>\r\n                <button onClick={() => getQuiz(num)}>Start!</button>\r\n            </div>\r\n\r\n\r\n            {\r\n                quiz.length > 0 && <Questions data={{ quiz: getCurrQuest(currentQuestionIdx) }} onGoNext={goNext} questLeft={left}></Questions>\r\n            }\r\n        </div >\r\n\r\n    );\r\n}\r\n","import React, { useState } from 'react';\nimport Toolbar from \"./cmps/toolbar\"\n\nimport Quiz from './cmps/quiz';\nexport default function App() {\n\n\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t<Toolbar></Toolbar>\n\t\t\t<Quiz></Quiz>\n\n\t\t</div >\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/best.d3d6a781.mp3\";"],"sourceRoot":""}